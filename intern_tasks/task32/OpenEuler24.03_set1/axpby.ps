%!PS-Adobe-2.0
%%Title: ../set1/axpby.ps
%%Creator: gnuplot 5.4 patchlevel 5
%%CreationDate: Mon Sep  9 14:27:55 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded true def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../set1/axpby.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 5)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep  9 14:27:55 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
770 448 M
63 0 V
6044 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
770 969 M
63 0 V
6044 0 R
-63 0 V
stroke
686 969 M
[ [(Helvetica) 140.0 0.0 true true 0 (2000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 1491 M
63 0 V
6044 0 R
-63 0 V
stroke
686 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 (4000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 2012 M
63 0 V
6044 0 R
-63 0 V
stroke
686 2012 M
[ [(Helvetica) 140.0 0.0 true true 0 (6000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 2534 M
63 0 V
6044 0 R
-63 0 V
stroke
686 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 (8000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 3055 M
63 0 V
6044 0 R
-63 0 V
stroke
686 3055 M
[ [(Helvetica) 140.0 0.0 true true 0 (10000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 3576 M
63 0 V
6044 0 R
-63 0 V
stroke
686 3576 M
[ [(Helvetica) 140.0 0.0 true true 0 (12000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 4098 M
63 0 V
6044 0 R
-63 0 V
stroke
686 4098 M
[ [(Helvetica) 140.0 0.0 true true 0 (14000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 4619 M
63 0 V
6044 0 R
-63 0 V
stroke
686 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 (16000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 448 M
0 31 V
0 4140 R
0 -31 V
861 448 M
0 31 V
0 4140 R
0 -31 V
938 448 M
0 31 V
0 4140 R
0 -31 V
1005 448 M
0 31 V
0 4140 R
0 -31 V
1064 448 M
0 31 V
0 4140 R
0 -31 V
1117 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1117 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1464 448 M
0 31 V
0 4140 R
0 -31 V
1666 448 M
0 31 V
0 4140 R
0 -31 V
1810 448 M
0 31 V
0 4140 R
0 -31 V
1922 448 M
0 31 V
0 4140 R
0 -31 V
2013 448 M
0 31 V
0 4140 R
0 -31 V
2090 448 M
0 31 V
0 4140 R
0 -31 V
2157 448 M
0 31 V
0 4140 R
0 -31 V
2216 448 M
0 31 V
0 4140 R
0 -31 V
2269 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2269 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (100)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2616 448 M
0 31 V
0 4140 R
0 -31 V
2819 448 M
0 31 V
0 4140 R
0 -31 V
2962 448 M
0 31 V
0 4140 R
0 -31 V
3074 448 M
0 31 V
0 4140 R
0 -31 V
3165 448 M
0 31 V
0 4140 R
0 -31 V
3242 448 M
0 31 V
0 4140 R
0 -31 V
3309 448 M
0 31 V
0 4140 R
0 -31 V
3368 448 M
0 31 V
0 4140 R
0 -31 V
3421 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3421 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1000)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3768 448 M
0 31 V
0 4140 R
0 -31 V
3971 448 M
0 31 V
0 4140 R
0 -31 V
4114 448 M
0 31 V
0 4140 R
0 -31 V
4226 448 M
0 31 V
0 4140 R
0 -31 V
4317 448 M
0 31 V
0 4140 R
0 -31 V
4394 448 M
0 31 V
0 4140 R
0 -31 V
4461 448 M
0 31 V
0 4140 R
0 -31 V
4520 448 M
0 31 V
0 4140 R
0 -31 V
4573 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4573 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10000)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4920 448 M
0 31 V
0 4140 R
0 -31 V
5123 448 M
0 31 V
0 4140 R
0 -31 V
5267 448 M
0 31 V
0 4140 R
0 -31 V
5378 448 M
0 31 V
0 4140 R
0 -31 V
5469 448 M
0 31 V
0 4140 R
0 -31 V
5547 448 M
0 31 V
0 4140 R
0 -31 V
5613 448 M
0 31 V
0 4140 R
0 -31 V
5672 448 M
0 31 V
0 4140 R
0 -31 V
5725 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5725 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (100000)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6072 448 M
0 31 V
0 4140 R
0 -31 V
6275 448 M
0 31 V
0 4140 R
0 -31 V
6419 448 M
0 31 V
0 4140 R
0 -31 V
6530 448 M
0 31 V
0 4140 R
0 -31 V
6621 448 M
0 31 V
0 4140 R
0 -31 V
6699 448 M
0 31 V
0 4140 R
0 -31 V
6765 448 M
0 31 V
0 4140 R
0 -31 V
6824 448 M
0 31 V
0 4140 R
0 -31 V
6877 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6877 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+06)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
[0 100] 0 setdash
LTw
LCw setrgbcolor
770 448 M
6107 0 V
stroke
[0 100] 0 setdash
LTw
LCw setrgbcolor
770 2534 M
6107 0 V
stroke
LTB
LCb setrgbcolor
770 4619 N
770 448 L
6107 0 V
0 4171 V
-6107 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (MFLOPS)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3823 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (vector size)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
LCb setrgbcolor
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1694 4486 M
('tensor') Rshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
770 1008 Pls
861 1120 Pls
938 1232 Pls
1005 1344 Pls
1064 1325 Pls
1117 1320 Pls
1164 1407 Pls
1248 1582 Pls
1320 1585 Pls
1382 1737 Pls
1464 2115 Pls
1534 1801 Pls
1595 1977 Pls
1666 2213 Pls
1744 2507 Pls
1810 2801 Pls
1880 2537 Pls
1951 2855 Pls
2022 3000 Pls
2097 2909 Pls
2163 3250 Pls
2238 3218 Pls
2307 3630 Pls
2376 3719 Pls
2448 3472 Pls
2516 3851 Pls
2587 3811 Pls
2659 3815 Pls
2729 3816 Pls
2798 4007 Pls
2869 4026 Pls
2939 3946 Pls
3009 3997 Pls
3079 4055 Pls
3149 3914 Pls
3220 3974 Pls
3290 3881 Pls
3360 3996 Pls
3430 4004 Pls
3500 4065 Pls
3570 4085 Pls
3640 4039 Pls
3711 4099 Pls
3781 3949 Pls
3851 4139 Pls
3921 4156 Pls
3991 4157 Pls
4061 4186 Pls
4131 4009 Pls
4202 3562 Pls
4272 3583 Pls
4342 3574 Pls
4412 3570 Pls
4482 3591 Pls
4552 3547 Pls
4622 3551 Pls
4692 3558 Pls
4762 3589 Pls
4833 3586 Pls
4903 3596 Pls
4973 3588 Pls
5043 3581 Pls
5113 3565 Pls
5183 3600 Pls
5253 3534 Pls
5323 3149 Pls
5393 3555 Pls
5464 3196 Pls
5534 3468 Pls
5604 3426 Pls
5674 3564 Pls
5744 3302 Pls
5814 2946 Pls
5884 3232 Pls
5954 2863 Pls
6024 2888 Pls
6095 3106 Pls
6165 2911 Pls
6235 3098 Pls
6305 2780 Pls
6375 2560 Pls
6445 2726 Pls
6515 2103 Pls
6585 1817 Pls
6655 1109 Pls
6726 1059 Pls
6796 1083 Pls
6866 1179 Pls
1977 4486 Pls
% End plot #1
% Begin plot #2
4.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
1694 4346 M
('eigen3') Rshow
4.000 UL
LTb
0.00 0.00 0.00 C
1778 4346 M
399 0 V
770 1017 M
91 113 V
77 114 V
67 114 V
59 112 V
53 113 V
47 114 V
84 227 V
72 220 V
62 226 V
82 340 V
70 -558 V
61 164 V
71 114 V
78 124 V
66 794 V
70 -430 V
71 376 V
71 92 V
75 -215 V
66 395 V
75 -168 V
69 385 V
69 25 V
72 -197 V
68 -508 V
71 103 V
72 -43 V
70 105 V
69 286 V
71 -43 V
70 -14 V
70 84 V
70 158 V
70 60 V
71 13 V
70 -17 V
70 49 V
70 -12 V
70 63 V
70 8 V
70 -15 V
71 41 V
70 -138 V
70 114 V
70 38 V
70 -25 V
70 29 V
70 -146 V
71 -404 V
70 34 V
70 -1 V
70 -12 V
70 17 V
70 10 V
70 -9 V
70 5 V
70 -1 V
71 3 V
70 -4 V
70 -37 V
70 36 V
70 6 V
70 -5 V
70 8 V
70 -49 V
70 1 V
71 -120 V
70 145 V
70 -62 V
70 43 V
70 -6 V
70 -9 V
70 -48 V
70 -81 V
70 -57 V
71 -36 V
70 63 V
70 -16 V
70 -185 V
70 -118 V
70 -849 V
70 -320 V
70 76 V
70 -450 V
71 -301 V
70 13 V
70 92 V
11 -21 V
% End plot #2
% Begin plot #3
stroke
3.000 UL
LTb
0.00 0.72 1.00 C
LCb setrgbcolor
1694 4206 M
('ublas') Rshow
3.000 UL
LTb
0.00 0.72 1.00 C
1778 4206 M
399 0 V
770 584 M
91 27 V
77 26 V
67 27 V
59 21 V
53 27 V
47 26 V
84 45 V
72 52 V
62 25 V
82 73 V
70 73 V
61 67 V
71 69 V
78 114 V
66 100 V
70 119 V
71 81 V
71 138 V
75 121 V
66 154 V
75 224 V
69 131 V
69 151 V
72 73 V
68 -422 V
71 127 V
72 149 V
70 154 V
69 -475 V
71 112 V
70 126 V
70 139 V
70 100 V
70 144 V
71 91 V
70 137 V
70 92 V
70 126 V
70 62 V
70 50 V
70 66 V
71 75 V
70 -56 V
70 189 V
70 -143 V
70 -325 V
70 15 V
70 33 V
71 17 V
70 20 V
70 -17 V
70 16 V
70 49 V
70 8 V
70 4 V
70 -37 V
70 45 V
71 6 V
70 -1 V
70 2 V
70 0 V
70 -68 V
70 -423 V
70 466 V
70 -271 V
70 214 V
71 -352 V
70 312 V
70 19 V
70 46 V
70 3 V
70 -380 V
70 352 V
70 -108 V
70 20 V
71 -258 V
70 -160 V
70 -661 V
70 -456 V
70 -330 V
70 67 V
70 -34 V
70 -53 V
70 -3 V
71 -175 V
70 -57 V
70 -10 V
11 0 V
% End plot #3
% Begin plot #4
stroke
LTb
0.75 0.34 0.00 C
LCb setrgbcolor
1694 4066 M
('OPENBLAS') Rshow
3.000 UL
LTb
0.75 0.34 0.00 C
1778 4066 M
399 0 V
770 601 M
91 19 V
77 18 V
67 18 V
59 3 V
53 22 V
47 24 V
84 10 V
72 31 V
62 40 V
82 60 V
70 60 V
61 59 V
71 80 V
78 99 V
66 -9 V
70 5 V
71 74 V
71 87 V
75 140 V
66 40 V
75 -3 V
69 154 V
69 -26 V
72 177 V
68 199 V
71 -180 V
72 122 V
70 194 V
69 246 V
71 -95 V
70 -46 V
70 135 V
70 43 V
70 171 V
71 -170 V
70 295 V
70 -57 V
70 3 V
70 9 V
70 40 V
70 4 V
71 19 V
70 80 V
70 -159 V
70 -128 V
70 309 V
70 31 V
70 2 V
71 -45 V
70 -41 V
70 -58 V
70 -75 V
70 -86 V
70 69 V
70 -24 V
70 70 V
70 -36 V
71 18 V
70 1 V
70 -16 V
70 33 V
70 14 V
70 -24 V
70 -3 V
70 -17 V
70 25 V
71 -52 V
70 -38 V
70 -450 V
70 1 V
70 60 V
70 6 V
70 260 V
70 -44 V
70 19 V
71 55 V
70 -43 V
70 -259 V
70 73 V
70 -228 V
70 -195 V
70 -345 V
70 -226 V
70 121 V
71 -428 V
70 -90 V
70 -23 V
11 8 V
% End plot #4
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
770 4619 N
770 448 L
6107 0 V
0 4171 V
-6107 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
3823 4829 M
[ [(Helvetica) 210.0 0.0 true true 0 (Y = alpha X + beta Y)]
] -70.0 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
